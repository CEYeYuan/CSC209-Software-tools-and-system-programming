Script started on Fri Apr  1 15:36:22 2016
]0;c4yuanyf@wolf:~/csc209/lecture/lab11wolf:~/csc209/lecture/lab11$ exit[12@gdb ./randclientexit[K[12@gdb ./randclient
GNU gdb (Ubuntu/Linaro 7.4-2012.04-0ubuntu2.1) 7.4-2012.04
Copyright (C) 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
For bug reporting instructions, please see:
<http://bugs.launchpad.net/gdb-linaro/>...
Reading symbols from /h/u8/c4/00/c4yuanyf/csc209/lecture/lab11/randclient...done.
(gdb) b main
Breakpoint 1 at 0x4007c3: file randclient.c, line 16.
(gdb) run 127.0.0.1
Starting program: /h/u8/c4/00/c4yuanyf/csc209/lecture/lab11/randclient 127.0.0.1
warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7ffff7ffa000

Breakpoint 1, main (argc=2, argv=0x7fffffffeba8) at randclient.c:16
16      int main(int argc, char** argv) {
(gdb) n
18        char message[18] = "A stitch in time\r\n";
(gdb) n
24        if ((soc = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
(gdb) n
29        peer.sin_family = AF_INET;
(gdb) n
30        peer.sin_port = htons(PORT);
(gdb) n
31        if (inet_pton(AF_INET, argv[1], &peer.sin_addr) < 1) {
(gdb) n
37        if (connect(soc, (struct sockaddr *)&peer, sizeof(peer)) == -1) {
(gdb) n
42        total_bytes = TIMES * sizeof(message);
(gdb) n
43        current_byte = 0;
(gdb) n
44        while (current_byte < total_bytes) {
(gdb) n
45          howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
46          bytes_left = total_bytes - current_byte;
(gdb) n
47          if (howmany > bytes_left) {
(gdb) n
50          for (int i = 0; i < howmany; i++) {
(gdb) n
51            piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
50          for (int i = 0; i < howmany; i++) {
(gdb) n
51            piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
50          for (int i = 0; i < howmany; i++) {
(gdb) n
51            piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
50          for (int i = 0; i < howmany; i++) {
(gdb) n
51            piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
50          for (int i = 0; i < howmany; i++) {
(gdb) n
51            piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
50          for (int i = 0; i < howmany; i++) {
(gdb) n
51            piece[i] = message[(current_byte + i) % sizeof(message)];
(gdb) n
50          for (int i = 0; i < howmany; i++) {
(gdb) n
53          write(soc, piece, howmany);
(gdb) b 53
Breakpoint 2 at 0x400959: file randclient.c, line 53.
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) c n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) n
44        while (current_byte < total_bytes) {
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) cn 
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) n
44        while (current_byte < total_bytes) {
(gdb) n
45          howmany = rand() % (MAXCHARS - MINCHARS + 1) + MINCHARS;
(gdb) n
46          bytes_left = total_bytes - current_byte;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) n
44        while (current_byte < total_bytes) {
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) n
44        while (current_byte < total_bytes) {
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c
Continuing.

Breakpoint 2, main (argc=2, argv=0x7fffffffeba8) at randclient.c:53
53          write(soc, piece, howmany);
(gdb) n
54          current_byte += howmany;
(gdb) c n
44        while (current_byte < total_bytes) {
(gdb) n
56        close(soc);
(gdb) 
57        return 0;
(gdb) qqq  
A debugging session is active.

        Inferior 1 [process 32678] will be killed.

Quit anyway? (y or n) y
]0;c4yuanyf@wolf:~/csc209/lecture/lab11wolf:~/csc209/lecture/lab11$ exit
exit

Script done on Fri Apr  1 15:43:14 2016
